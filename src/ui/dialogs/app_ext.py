# Form implementation generated from reading ui file 'ui\dialogs\apparat_extend.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(388, 103)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        Dialog.setMinimumSize(QtCore.QSize(388, 103))
        Dialog.setMaximumSize(QtCore.QSize(388, 103))
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setGeometry(QtCore.QRect(290, 30, 81, 241))
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.buttonBox.setStandardButtons(
            QtWidgets.QDialogButtonBox.StandardButton.Abort
            | QtWidgets.QDialogButtonBox.StandardButton.Save
        )
        self.buttonBox.setObjectName("buttonBox")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(10, 0, 281, 31))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setGeometry(QtCore.QRect(10, 30, 241, 41))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.line = QtWidgets.QFrame(self.frame)
        self.line.setGeometry(QtCore.QRect(120, 0, 3, 61))
        self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.rad_sommer = QtWidgets.QRadioButton(self.frame)
        self.rad_sommer.setGeometry(QtCore.QRect(10, 10, 82, 21))
        self.rad_sommer.setObjectName("rad_sommer")
        self.rad_winter = QtWidgets.QRadioButton(self.frame)
        self.rad_winter.setGeometry(QtCore.QRect(140, 10, 82, 21))
        self.rad_winter.setObjectName("rad_winter")
        self.sem_year = QtWidgets.QLineEdit(Dialog)
        self.sem_year.setGeometry(QtCore.QRect(10, 70, 121, 20))
        self.sem_year.setObjectName("sem_year")
        self.dauerapp = QtWidgets.QCheckBox(Dialog)
        self.dauerapp.setGeometry(QtCore.QRect(150, 70, 91, 21))
        self.dauerapp.setObjectName("dauerapp")

        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(Dialog.accept)  # type: ignore
        self.buttonBox.rejected.connect(Dialog.reject)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(
            _translate("Dialog", "Bis wann soll der Apparat verlÃ¤ngert werden?")
        )
        self.rad_sommer.setText(_translate("Dialog", "Sommer"))
        self.rad_winter.setText(_translate("Dialog", "Winter"))
        self.sem_year.setPlaceholderText(_translate("Dialog", "2023"))
        self.dauerapp.setText(_translate("Dialog", "Dauerapparat"))

    def get_data(self):
        # def __select_sem_state():
        #     curr_month=QtCore.QDate.currentDate().month()
        #     if curr_month>=4 and curr_month<=9:
        #         return "SoSe"
        #     else:
        #         return "WiSe"
        # if __select_sem_state()=="SoSe":
        #     self.rad_sommer.setChecked(True)
        # else:
        #     self.rad_winter.setChecked(True)
        return {
            "semester": f"SoSe {int(self.sem_year.text()[-2:])}"
            if self.rad_sommer.isChecked()
            else f"WiSe {int(self.sem_year.text()[-2:])}/{int(self.sem_year.text()[-2:])+1}",
            "dauerapp": self.dauerapp.isChecked()
            if self.dauerapp.isChecked()
            else False,
        }


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
